name: 'OSP Action'
description: 'GitHub Action for OSP (Open Source Software Pilot) - Streamline your open source project management in CI/CD pipelines.'
author: 'elliotxx'

inputs:
  version:
    description: |
      The version of OSP to use.
      Can be v1.2.3 or 'latest' to use the latest version.
    required: false
    default: 'latest'
  
  working-directory:
    description: "OSP working directory, default is project root"
    required: false
    
  github-token:
    description: "GitHub token for authentication and API access"
    default: ${{ github.token }}
    required: false

  skip-cache:
    description: |
      If set to true then all caching functionality will be completely disabled,
      takes precedence over all other caching options.
    default: 'false'
    required: false

  debug:
    description: |
      Enable debug mode to show verbose output.
      This will help diagnose issues with authentication and execution.
    required: false
    default: 'false'

  args:
    description: "Additional OSP command line arguments"
    default: ""
    required: false

runs:
  using: 'composite'
  steps:
    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.22'

    - name: Setup OSP cache
      if: inputs.skip-cache != 'true'
      uses: actions/cache@v3
      with:
        path: |
          ~/.cache/osp
        key: ${{ runner.os }}-osp-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-osp-

    - name: Install OSP
      run: |
        if [ "${{ inputs.version }}" = "latest" ]; then
          go install github.com/elliotxx/osp@latest
        else
          go install github.com/elliotxx/osp@${{ inputs.version }}
        fi
      shell: bash

    - name: Run OSP
      run: |
        cd ${{ inputs.working-directory || '.' }}
        
        # Debug: Check GITHUB_TOKEN
        echo "GITHUB_TOKEN: $GITHUB_TOKEN"
        
        # Check osp version
        osp --version

        # Check current repo
        osp repo current

        # Check authentication status
        if [ "${{ inputs.debug }}" = "true" ]; then
          osp -v auth status
        else
          osp auth status
        fi
        
        # Run command with additional arguments
        if [ -n "${{ inputs.args }}" ]; then
          if [ "${{ inputs.debug }}" = "true" ]; then
            osp -v ${{ inputs.args }}
          else
            osp ${{ inputs.args }}
          fi
        fi
      shell: bash
      env:
        GITHUB_TOKEN: ${{ github.token }}

branding:
  icon: 'calendar'
  color: 'blue'
